<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.hg.dao.BoardDao">
	<!-- 닉네임 검색 매개 변수는 @Param사용 -->
	<select id="searchNick" resultType="java.util.HashMap">
		select *
		from S_gyulbbe.board
		where member_nick LIKE
		CONCAT('%', #{memberNick}, '%')
		and type_seq = 2
		order by board_seq desc
		limit 10 offset #{offset}
	</select>

	<!-- 닉네임 검색 총 게시물 -->
	<select id="getTotalArticleCntNick" parameterType="String" resultType="int">
		select count(*)
		from
		S_gyulbbe.board
		where member_nick like
		concat('%', #{memberNick}, '%')
		and type_seq = 2
	</select>

	<!-- 제목 검색 매개 변수는 @Param사용 -->
	<select id="searchTitle" resultType="java.util.HashMap">
		select *
		from S_gyulbbe.board
		where title LIKE CONCAT('%', #{title}, '%')
		and type_seq = 2
		order by board_seq desc
		limit 10 offset
		#{offset}
	</select>

	<!-- 제목 검색 총 게시물 -->
	<select id="getTotalArticleCntTitle" parameterType="String" resultType="int">
		select count(*)
		from S_gyulbbe.board
		where title like concat('%', #{title}, '%')
		and type_seq = 2
	</select>

	<!-- 게시판 리스트 -->
	<select id="boardList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *
		from S_gyulbbe.board
		where type_seq = 2
		order by
		board_seq desc
		limit 10 offset #{offset}
	</select>

	<!-- 공지사항 리스트 -->
	<select id="noticeList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *
		from S_gyulbbe.board
		where type_seq = 1
		order by
		board_seq desc
		limit 10
	</select>

	<!-- 게시판 갯수 -->
	<select id="getTotalArticleCnt" resultType="int">
		select count(*)
		from
		S_gyulbbe.board
		where type_seq = 2;
	</select>

	<!-- 글만 작성 -->
	<insert id="write" parameterType="BoardDto">
	<!-- keyProperty의 값을 key가 되고, parameterType의 객체에 저장된다.-->
	<selectKey resultType="int" keyProperty="boardSeq" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
		INSERT INTO S_gyulbbe.board
		(type_seq, member_idx, member_id, member_nick, title, content, hits, create_dtm, update_dtm) VALUES(
		2,
		#{memberIdx},
		#{memberId},
		#{memberNick},
		#{title},
		#{content},
		0,
		DATE_FORMAT(NOW(), '%Y%m%d%H%i%s'),
		DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
		)
	</insert>

	<!-- 파일있는 글 작성 -->
	<insert id="writeWithFile" parameterType="java.util.HashMap" useGeneratedKeys="true" keyProperty="boardSeq">
		INSERT INTO S_gyulbbe.board
		(type_seq, member_id, member_nick, title, content, has_file, hits, create_dtm, update_dtm)
		VALUES(
		#{typeSeq},
		#{memberId},
		#{memberNick},
		#{title},
		#{content},
		#{hasFile},
		0,
		DATE_FORMAT(NOW(), '%Y%m%d%H%i%s'),
		DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
		)
	</insert>

	<!-- 게시글 읽기 -->
	<select id="read" parameterType="BoardDto" resultType="BoardDto">
		SELECT b.type_seq, b.board_seq, b.member_idx, m.member_id, m.member_nick, b.title, b.content, b.has_file, b.hits, b.create_dtm, b.update_dtm
		FROM S_gyulbbe.board b
		JOIN S_gyulbbe.member m ON m.member_idx = b.member_idx
		WHERE board_seq = #{boardSeq};
	</select>

	<!-- 조회수 -->
	<update id="updateHits" parameterType="BoardDto">
		UPDATE S_gyulbbe.board
		SET hits = hits+1
		WHERE board_seq = #{boardSeq};
	</update>

	<!-- 게시글 수정 -->
	<update id="update" parameterType="BoardDto">
		UPDATE S_gyulbbe.board
		SET content = #{content}, title = #{title}, update_dtm = DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
		WHERE board_seq = #{boardSeq}
	</update>

	<update id="updateHasFileToZero" parameterType="java.util.HashMap">


	</update>

	<!-- 게시글 삭제 -->
	<delete id="delete" parameterType="BoardDto">
		delete from S_gyulbbe.board
		where board_seq = #{boardSeq}
	</delete>
</mapper>